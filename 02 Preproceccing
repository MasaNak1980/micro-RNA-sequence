1 Remove the reads of bad quality using fastq_quality_filter from fastx-toolkit.
 $fastq_quality_filter -q 20 -p 95 -i Con1.fastq -o Con1_qf.fastq
 $fastq_quality_filter -q 20 -p 95 -i Con2.fastq -o Con2_qf.fastq
 $fastq_quality_filter -q 20 -p 95 -i Exp1.fastq -o Exp1_qf.fastq
 $fastq_quality_filter -q 20 -p 95 -i Exp2.fastq -o Exp2_qf.fastq
for sample in `ls *fastq | xargs basename -s .fastq | uniq`; do echo Remove the reads of bad quality:${sample}; fastq_quality_filter -q 20 -p 95 -i ${sample}.fastq -o ${sample}_qf.fastq;done; echo finished 

2 Trim the 3'-adapter with flexbar.
 $flexbar -t Con1_trimed -r Con1_qf.fastq -as ATCTCGTATGCCGTCTTCTGCTT -ao 4 -m 16 -n 6
 $flexbar -t Con2_trimed -r Con2_qf.fastq -as ATCTCGTATGCCGTCTTCTGCTT -ao 4 -m 16 -n 6
 $flexbar -t Exp1_trimed -r Exp1_qf.fastq -as ATCTCGTATGCCGTCTTCTGCTT -ao 4 -m 16 -n 6
 $flexbar -t Exp2_trimed -r Exp2_qf.fastq -as ATCTCGTATGCCGTCTTCTGCTT -ao 4 -m 16 -n 6

HPC 他のmoduleはloadしない方がよい 
module load flexbar/3.0.3-foss-2016b 
for sample in `ls *_qf.fastq | xargs basename -s _qf.fastq | uniq`; do echo Trim the adapter:${sample}; flexbar -t ${sample}_trimed -r ${sample}_qf.fastq -as ATCTCGTATGCCGTCTTCTGCTT -ao 4 -m 16 -n 8;done; echo finished 

 
3 Get the length distribution of total reads to have an overview of the datasets. 
  $cat Con1_trimed.fastq | awk '{if(NR%4==2) print length ($1)}' | sort -n | uniq -c >Con1_readLength.txt
  $cat Con2_trimed.fastq | awk '{if(NR%4==2) print length ($1)}' | sort -n | uniq -c >Con2_readLength.txt
  $cat Exp1_trimed.fastq | awk '{if(NR%4==2) print length ($1)}' | sort -n | uniq -c >Exp1_readLength.txt
  $cat Exp2_trimed.fastq | awk '{if(NR%4==2) print length ($1)}' | sort -n | uniq -c >Exp2_readLength.txt
HPC
for sample in `ls *.fastq | xargs basename -s _trimed.fastq | uniq`; do echo Get the length distribution of total reads:${sample}; cat ${sample}_trimed.fastq | awk '{if(NR%4==2) print length ($1)}' | sort -n | uniq -c >${sample}_readLength.txt;done; echo finished  


4 Open the Rstudio 
  Setup the working directory and load the data from step 3. 
  Using the head() function to check the loaded datasets, there are two columns for each dataset: 
  the first column is frequency and the second column is read length.

　　>setwd(“~/your-working-directory”)
　　>Con1_lengthDis = read.table("Con1_readLength.txt") 
　　>Con2_lengthDis = read.table("Con2_readLength.txt") 
　　>Exp1_lengthDis = read.table("Exp1_readLength.txt") 
　　>Exp2_lengthDis = read.table("Exp2_readLength.txt") 

　　>head(Con1_lengthDis)## V1 V2
　　　##1 232515 16
　　　##2 325012 17
　　　##3 308513 18
　　　##4 294719 19
　　　##5 485567 20
　　　##6 1803169 21
   
   
5 Produce the figures of reads length distribution

setwd("/Volumes/Biomasa/miR/dataset")

Con1_lengthDis = read.table("Con1_readLength.txt")
Con2_lengthDis = read.table("Con2_readLength.txt") 
Exp1_lengthDis = read.table("Exp1_readLength.txt") 
Exp2_lengthDis = read.table("Exp2_readLength.txt") 

head(Con1_lengthDis)


ConColor = c("gray20","gray70")
ExpColor = c("pink","red") 

barplot(rbind(Con1_lengthDis[1:15,1],Con2_lengthDis [1:15,1])/1000000,names.arg = 16:30,beside = T,col=ConColor,ylab="Total read counts (M)",xlab="Adapter trimed reads length",main = "Length Distribution") 
legend("topleft",c("Con1","Con2"),bty="n",fill = ConColor) 

barplot(rbind(Exp1_lengthDis[1:15,1],Exp2_lengthDis [1:15,1])/1000000,names.arg = 16:30,beside= T,col=ExpColor,ylab="Total read counts(M)",xlab="Adapter trimed reads length",main = "Length Distribution")
legend("topleft",c("Exp1","Exp2"),bty="n",fill = ExpColor)



